---
swagger: '2.0'
# info will be displayed on first page
servers:
  - url: //open-api.devel.paper.id/
    description: Production server

schemes:
  - "https"

info:
  x-logo:
    url: "https://paper.id/img/paperlogofinal.svg"
    backgroundColor: "#FFFFFF"
    altText: "Paper id logo"
    href: "https://paper.id"

  description: |
    # Introduction
    PAPER.ID API is organized around REST. Our API has predictable resource-oriented URLs, accepts form-encoded request bodies, 
    returns JSON-encoded responses, and uses standard HTTP response codes and authentication.

    # Authentication
    Before using the API, reach out to Paper.id team to get your client and account created. The PAPER.ID API's are authenticated using Basic Auth. Basic auth requires the following:

    | Key            | Value                |
    |----------------|----------------------|
    | client_id      | [YOUR_CLIENT_ID]     |
    | client_secret  | [YOUR_CLIENT_SECRET] |

    Basic auth expects an Authorization header for each request in the basic base 64 token format. 
    Your client_id and client secrets carry many privileges, so be sure to keep them secure! Do not share your secret API keys in publicly accessible areas such as GitHub, 
    
    client-side code, and so forth.
    All API requests must be made over HTTPS. Calls made over plain HTTP will fail. API requests without authentication will also fail.

    # Environment
    | Environment | Base URL                              |
    |-------------|---------------------------------------|
    | Sandbox     | https://open-api.sandbox.paper.id/api |
    | Production  | https://apis.paper.id/api             |



    For the front end side (dashboard) you can access via these URL
    | Environment | Dashboard  URL                        |
    |-------------|---------------------------------------|
    | Sandbox     | https://sandbox.paper.id/webappv1/    |
    | Production  | https://paper.id/webappv1/            |

    Response Code
    Description Of Usual Server Responses:
    1. 200 OK - the request was successful (some API calls may return 201 instead).
    2. 201 Created- the request was successful and a resource was created.
    3. 204 No Content- the request was successful but there is no representation to return (i.e. the response is empty).
    4. 400 Bad Request- the request could not be understood or was missing required parameters.
    5. 401 Unauthorized- authentication failed or user doesn't have permissions for requested operation.
    6.  6403 Forbidden - access denied.
    7. 404 Not Found- resource was not found.
    8. 405 Method Not Allowed- requested method is not supported for resource.
    9. 500 Internal Server Error- It means that the server encountered an unexpected condition that prevented it from fulfilling the request.

    # Webhook
    PAPER uses callback to notify your application any time an event happens on your account like when the customer completes the payment process or when transaction status changes. 
    These notifications help you to update payment status or take suitable actions in real-time.
    # Setup
    You can set up your callback URL Setting by reaching our developers team. You need to provide a callback URL endpoint in your system to receive callback from us. 
    With the Callback URL the HTTPS connection will be terminated immediately and a unique id will be returned in the response body. PAPER.ID will POST a message to the callback_url specified in your request in a JSON format application/json. The ID in the response will reflect the ID in the results posted to your Callback URL.


    click <a href='https://documenter.getpostman.com/view/15278429/TzecDR2p#2a736a3b-4868-42a5-b1de-7bc05845ef2e'>Here</a> to see payment callback value.

    click <a href='https://documenter.getpostman.com/view/15278429/TzecDR2p#0bff0600-3bd7-4e23-8fb2-354bbbf013ea'>Here</a> to see invoice callback value.

    # Partner Description
    This API represents your business partner (which are either customer, supplier or both roles simultaneously). 
    It lets you get the information about the contact and it will act as a basis on whom the document will be referred to.

    <h1>Partner Behavior</h1>
    Please bear in mind as well that the main attribute that will be unique and act as identifier for each partners are:

    1. ID.
    2. Phone number.
    3. Email address.

    Therefore, it is strongly recommended to check whether there is duplicate on the phone number and email address or not before creating or updating the partners.

    Use id as the reference to your existing Customer. If no Partner (Customer or Supplier) with the id exists, a new one will be created when you are calling the API.

    <strong>CAUTION</strong>: If a partner already exists with the id, its metadata will be updated with the one in.

  version: "1.0.0"
  title: "Paper id API Docs"
  termsOfService: 'http://paper.id/terms/'
  contact:
    name: API Support PaperID
    email: support@paper.id
    url: https://bitbucket.com/paper/redocly
  license:
    name: Testing 1.0
    url: 'https://github.com/zenilevh/Ganri'


paths:
  /v1/purchase-orders/{{order_id}}:
    get:
      tags:
        - "Purchase orders"
      summary: "Purchase Order (Single Document) "
      description: "Request this endpoint to get all partners (client, supplier or both) in your Paper.id account "
      operationId: "generate-token"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: client_id
          in: header
          description: "For valid response try integer IDs with value <= 5 or > 10. Other values will generated exceptions"
          example: 1234
          required: true
          schema:
            type: string
        - name: client_secret
          in: header
          description: "Date and time when making request; Formatted in DD-MM-YYYY HH:MM:SS"
          example: 12-10-2020 00:00:00
          required: true
          schema:
            type: string
        - name: "Content-Type"
          in: header
          description: "lorem ipsum"
          required: true
          schema:
            type: application/json
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ApiResponseGetPurchaseOrderSingle"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/errorResponse400"
        403:
          description: "Unauthorized access"
          schema:
            $ref: "#/definitions/errorResponse403"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/errorResponse404"
      x-codeSamples:
        - lang: "cURL"
          source: |
            curl --location --request POST '{{paper-open-api}}/v1/purchase-orders/ {{order_id}}' \
                      --header 'client_id;' \
                      --header 'client_secret;' \
                      --header 'company_id;' \
                      --header 'Content-Type: application/json' \

  
# security definitions will show as "Authentication" under the info
securityDefinitions:
definitions:
  ApiResponse:
    type: "object"
    properties:
      success:
        type: "boolean"
      message:
        type: "string"
        example: "success"
      data:
        type: "object"

  ApiResponseGetPurchaseOrderSingle:
    type: "object"
    properties:
      success:
        type: "boolean"
      message:
        type: "string"
        example: "success"
      data:
        $ref: "#/definitions/PurchaseOrderSingleResponseData"
  
  PurchaseOrderSingleResponseData:
    type: "object"
    properties:
      id:
        type: "string"
        example: "bc901483-1e18-4df1-a99d-7d1cb0e6f25f012349"
      number:
        type: "string"
        example: "PO/VI/0001"
      status:
        type: "string"
        example: "accepted"
      order_date:
        type: "string"
        example: "2022-06-29"
      suplier:
        type: "object"
        properties:
          id:
            type: "string"
            example: "S.00001"
          company_name:
            type: "string"
            example: "PT.Pakar Digital Global"
          company_email:
            type: "string"
            example: "pdg.paper@paper.id"
          company_phone:
            type: "string"
            example : "+622119209102"
          href:
            type: "string"
            example : "/partners/89e7bf3f-0d81-408c-ad1a-0c5fe490f5db"
          contacts:
            type: "array"
            items:
              type: "object"
              properties:
                name:
                  type: "string"
                  example: "John Doe"
                email:
                  type: "string"
                  example: "john@paper.id"
                phone:
                  type: "string"
                  example: "+6289123456789"
          items:
            type: "array"
            items:
              type: "object"
              properties:
                name:
                  type: "string"
                  example: "AC LG"
                code:
                  type: "string"
                  example: "SKU0001"
                description:
                  type: "string"
                  example: "Ductless, Mini-Split Air Conditioner"
                quantity:
                  type: "string"
                  example: "1"
                uom:
                  type: "string"
                  example: "pcs"
                discount:
                  type: "number"
                  example: 0
                price:
                  type: "number"
                  example: 1000000
                tax:
                  type: "number"
                  example: 10
                product_href:
                  type: "string"
                  example: "/products/82e69cd1-e66a-4a57-9862-2e4396b1c3ca"
                additional_info:
                  type: "object"
                  properties:
                    discount_tier:
                      type: "string"
                      example: "1"
                    batch_no:
                      type: "string"
                      example: "MFG0580"

  ApiResponseGetRemainingLimit:
    type: "object"
    properties:
      success:
        type: "boolean"
      message:
        type: "string"
        example: "success"
      data:
        $ref: "#/definitions/remainingLimitcSuccessResponse"
  remainingLimitcSuccessResponse:
    type: "object"
    properties:
      identity_basic:
        type: "number"
        example: 85
      identity_professional:
        type: "number"
        example: 99
      income_basic:
        type: "number"
        example: 89
      income_by_nik:
        type: "number"
        example: 20
      phone_number:
        type: "number"
        example: 87

  ApiResponseBankAccount:
    type: "object"
    properties:
      success:
        type: "boolean"
      message:
        type: "string"
        example: "success"
      data:
        $ref: "#/definitions/bankAccountSuccessResponse"
  bankAccountSuccessResponse:
    type: "object"
    properties:
      bank_code:
        type: "boolean"
        example: true
      account_number:
        type: "boolean"
        example: false
      account_name:
        type: "string"
        example: john doe

  ApiResponsePropertyCount:
    type: "object"
    properties:
      success:
        type: "boolean"
      message:
        type: "string"
        example: "success"
      data:
        $ref: "#/definitions/propertyCountSuccessResponse"
  propertyCountSuccessResponse:
    type: "object"
    properties:
      property_count:
        type: "string"
        example: 2

  ApiResponseWorkplace:
    type: "object"
    properties:
      success:
        type: "boolean"
      message:
        type: "string"
        example: "success"
      data:
        $ref: "#/definitions/workplaceSuccessResponse"
  workplaceSuccessResponse:
    type: "object"
    properties:
      nik:
        type: "boolean"
        example: true
      name:
        type: "boolean"
        example: true
      company:
        type: "boolean"
        example: true
      company_name:
        type: "string"
        example: true
      company_phone:
        type: "boolean"
        example: true

  ApiResponseVehicleOwnership:
    type: "object"
    properties:
      success:
        type: "boolean"
      message:
        type: "string"
        example: "success"
      data:
        $ref: "#/definitions/vehicleOwnershipSuccessResponse"
  vehicleOwnershipSuccessResponse:
    type: "object"
    properties:
      plate_number:
        type: "boolean"
        example: true
      nik:
        type: "boolean"
        example: true
      name:
        type: "string"
        example: 100
      address:
        type: "string"
        example: 100
      vehicle_brand:
        type: "string"
        example: 100
      vehicle_type:
        type: "string"
        example: 100
      vehicle_cylinder:
        type: "boolean"
        example: true
      chasis_no:
        type: "boolean"
        example: true
      engine_no:
        type: "boolean"
        example: true
      vehicle_color:
        type: "string"
        example: 100
      vehicle_year:
        type: "string"
        example: 100

  ApiResponseCompanySk:
    type: "object"
    properties:
      success:
        type: "boolean"
      message:
        type: "string"
        example: "success"
      data:
        $ref: "#/definitions/companySkSuccessResponse"
  companySkSuccessResponse:
    type: "object"
    properties:
      company_npwp:
        type: "boolean"
        example: true
      company_name:
        type: "boolean"
        example: true
      company_sk_no:
        type: "boolean"
        example: true
      company_sk_date:
        type: "boolean"
        example: true

  ApiResponsePropertyOwnership:
    type: "object"
    properties:
      success:
        type: "boolean"
      message:
        type: "string"
        example: "success"
      data:
        $ref: "#/definitions/propertyOwnershipSuccessResponse"
  propertyOwnershipSuccessResponse:
    type: "object"
    properties:
      property_address:
        type: "string"
        example: "J*l*n J*nd*r*l S*d*rm*n"
      property_owner_name:
        type: "boolean"
        example: true
      property_building_area:
        type: "boolean"
        example: true
      property_surface_area:
        type: "boolean"
        example: true
      property_estimation_value:
        type: "string"
        example: 500000000
      certificate_address:
        type: "string"
        example: "J*l*n J*nd*r*l S*d*rm*n"
      certificate_id:
        type: "boolean"
        example: true
      certificate_owner_name:
        type: "boolean"
        example: true
      certificate_type:
        type: "boolean"
        example: true
      certificate_issue_date:
        type: "boolean"
        example: true

  ApiResponseWatchlistInformation:
    type: "object"
    properties:
      success:
        type: "boolean"
      message:
        type: "string"
        example: "success"
      data:
        $ref: "#/definitions/watchlistInformationSuccessResponse"
  watchlistInformationSuccessResponse:
    type: "array"
    items:
      type: "object"
      properties:
        person_entity_id:
          type: "string"
          example: "3129229"
        full_name:
          type: "string"
          example: "John Doe"
        first_name:
          type: "string"
          example: "John"
        middle_name:
          type: "string"
          example: ""
        surename:
          type: "string"
          example: "Doe"
        similarity:
          type: "integer"
          example: 92
        birth_date:
          type: "string"
          example: "1990-01-20"
        source_info:
          type: "string"
          example: "Dow Jones"
        source_info_code:
          type: "string"
          example: "DW"
        country_name:
          type: "string"
          example: "Indonesia"
        occupation_category:
          type: "string"
          example: "Special Interest Person (SIP)"
        source_info_desc:
          type: "string"
          example: "Dow Jones"
        image_profile:
          type: "string"
          example: "https://assets.example.com/crop/0x0:x0/x/photo/2002/12/06/255X0X3868.jpg"
        person_id:
          type: "string"
          example: "g564xx4b-bxc3-xxfc-a5xx-x0c12xa4b1b0"

  ApiResponseIdentityBasic:
    type: "object"
    properties:
      success:
        type: "boolean"
      message:
        type: "string"
        example: "success"
      data:
        $ref: "#/definitions/identityBasicSuccessResponse"
  identityBasicSuccessResponse:
    type: "object"
    properties:
      name:
        type: "number"
        example: 85
      address:
        type: "number"
        example: 99
      birthdate:
        type: "boolean"
        example: true
      birthplace:
        type: "number"
        example: 89

  ApiResponseIdentityProfessional:
    type: "object"
    properties:
      success:
        type: "boolean"
      message:
        type: "string"
        example: "success"
      data:
        $ref: "#/definitions/identityProfessionalSuccessResponse"
  identityProfessionalSuccessResponse:
    type: "object"
    properties:
      name:
        type: "number"
        example: 85
      address:
        type: "number"
        example: 99
      birthdate:
        type: "boolean"
        example: true
      birthplace:
        type: "number"
        example: 89
      selfie_photo:
        type: "number"
        example: 95.3

  ApiResponseEmail:
    type: "object"
    properties:
      success:
        type: "boolean"
      message:
        type: "string"
        example: "success"
      data:
        $ref: "#/definitions/emailSuccessResponse"
  emailSuccessResponse:
    type: "object"
    properties:
      match_result:
        type: "boolean"
        example: true

  ApiResponseIncomeBasic:
    type: "object"
    properties:
      success:
        type: "boolean"
      message:
        type: "string"
        example: "success"
      data:
        $ref: "#/definitions/incomeBasicSuccessResponse"
  incomeBasicSuccessResponse:
    type: "object"
    properties:
      income:
        type: "string"
        example: "BELOW"
      name:
        type: "boolean"
        example: true
      birthdate:
        type: "boolean"
        example: true
      birthplace:
        type: "boolean"
        example: true
      nik:
        type: "boolean"
        example: true
      npwp:
        type: "boolean"
        example: true
      match_result:
        type: "boolean"
        example: true

  ApiResponseIncomeByNIK:
    type: "object"
    properties:
      success:
        type: "boolean"
      message:
        type: "string"
        example: "success"
      data:
        $ref: "#/definitions/incomeByNIKSuccessResponse"
  incomeByNIKSuccessResponse:
    type: "object"
    properties:
      income:
        type: "string"
        example: "BELOW"
      name:
        type: "boolean"
        example: true
      birthdate:
        type: "boolean"
        example: true
      birthplace:
        type: "boolean"
        example: true

  ApiResponseCompanyIncome:
    type: "object"
    properties:
      success:
        type: "boolean"
      message:
        type: "string"
        example: "success"
      data:
        $ref: "#/definitions/companyIncomeSuccessResponse"
  companyIncomeSuccessResponse:
    type: "object"
    properties:
      company_npwp:
        type: "boolean"
        example: true
      income:
        type: "string"
        example: "BELOW"

  ApiResponseShareholder:
    type: "object"
    properties:
      success:
        type: "boolean"
      message:
        type: "string"
        example: "success"
      data:
        $ref: "#/definitions/shareholderSuccessResponse"
  shareholderSuccessResponse:
    type: "object"
    properties:
      company_npwp:
        type: "boolean"
        example: true
      company_name:
        type: "string"
        example: true
      nik:
        type: "boolean"
        example: true
      name:
        type: "boolean"
        example: true

  ApiResponsePhoneNumber:
    type: "object"
    properties:
      success:
        type: "boolean"
      message:
        type: "string"
        example: "success"
      data:
        $ref: "#/definitions/phoneNumberSuccessResponse"
  phoneNumberSuccessResponse:
    type: "object"
    properties:
      match_result:
        type: "boolean"
        example: true

  ApiResponsePhoneLifespan:
    type: "object"
    properties:
      success:
        type: "boolean"
      message:
        type: "string"
        example: "success"
      data:
        $ref: "#/definitions/phoneLifespanSuccessResponse"
  phoneLifespanSuccessResponse:
    type: "object"
    properties:
      match_result:
        type: "boolean"
        example: true

  ApiResponsePhoneCount:
    type: "object"
    properties:
      success:
        type: "boolean"
      message:
        type: "string"
        example: "success"
      data:
        $ref: "#/definitions/phoneCountSuccessResponse"
  phoneCountSuccessResponse:
    type: "object"
    properties:
      result:
        type: "boolean"
        example: true
      total:
        type: "number"
        example: 4

  ApiResponseHomeAddress:
    type: "object"
    properties:
      success:
        type: "boolean"
      message:
        type: "string"
        example: "success"
      data:
        $ref: "#/definitions/homeAddressSuccessResponse"
  homeAddressSuccessResponse:
    type: "object"
    properties:
      location_percentage:
        type: "number"
        example: 100

  ApiResponseWorkAddress:
    type: "object"
    properties:
      success:
        type: "boolean"
      message:
        type: "string"
        example: "success"
      data:
        $ref: "#/definitions/workAddressSuccessResponse"
  workAddressSuccessResponse:
    type: "object"
    properties:
      work_address_percentage:
        type: "number"
        example: 100

  ApiResponseNegativeList:
    type: "object"
    properties:
      success:
        type: "boolean"
      message:
        type: "string"
        example: "success"
      data:
        $ref: "#/definitions/negativeListSuccessResponse"
  negativeListSuccessResponse:
    type: "object"
    properties:
      nik:
        type: "boolean"
        example: true
      name:
        type: "string"
        example: "J*H*N *A*H*N"
      birthdate:
        type: "boolean"
        example: true
      birthplace:
        type: "boolean"
        example: true
      detail:
        type: "object"
        properties:
          status:
            type: "string"
            example: "Tersangka"

  ApiResponseFamilyCard:
    type: "object"
    properties:
      success:
        type: "boolean"
      message:
        type: "string"
        example: "success"
      data:
        $ref: "#/definitions/familyCardSuccessResponse"
  familyCardSuccessResponse:
    type: "object"
    properties:
      family_id:
        type: "boolean"
        example: true

  ApiResponseMotherName:
    type: "object"
    properties:
      success:
        type: "boolean"
      message:
        type: "string"
        example: "success"
      data:
        $ref: "#/definitions/motherNameSuccessResponse"
  motherNameSuccessResponse:
    type: "object"
    properties:
      mother_name:
        type: "number"
        example: 96


  ApiResponseAccountStatement:
    type: "object"
    properties:
      success:
        type: "boolean"
      message:
        type: "string"
        example: "success"
      data:
        $ref: "#/definitions/accountStatementSuccessResponse"
  accountStatementSuccessResponse:
    type: "object"
    properties:
      account_name:
        type: "string"
        example: "Bpk ROBERT NARO ROBERT NARO"
      account_no:
        type: "string"
        example: "0115476117"
      currency:
        type: "string"
        example: "IDR"
      balance:
        type: "number"
        example: "15000000"
      branch:
        type: "string"
        example: "KCP Anda"
      transactions:
        type: "array"
        items:
          type: "object"
          properties:
            date:
              type: "string"
              example: "2010-05-31"
            info:
              type: "string"
              example: "TRANSFER DARI 00000000115476151"
            mutation:
              type: "string"
              example: "1000.002"
            type:
              type: "string"
              example: "C"

  ApiResponseAccountStatementResult:
    type: "object"
    properties:
      success:
        type: "boolean"
      message:
        type: "string"
        example: "success"
  accountStatementResultSuccessResponse:
    type: "array"
    items:
      type: "object"
      properties:
        id:
          type: "number"
          example: 1
        app_id:
          type: "number"
          example: 1
        account_no:
          type: "string"
          example: "019324887134"
        customer_name:
          type: "string"
          example: "Galih Hardiyan"
        balance:
          type: "number"
          example: 1484250
        sign_up_dt:
          type: "string"
          example: "2021-07-05"
        last_update:
          type: "string"
          example: "2021-07-06 03:34:38"

  ApiResponseAccountStatementResultDetail:
    type: "object"
    properties:
      success:
        type: "boolean"
      message:
        type: "string"
        example: "success"
      data:
        $ref: "#/definitions/accountStatementResultDetailSuccessResponse"
  accountStatementResultDetailSuccessResponse:
    type: "object"
    properties:
      id:
        type: "number"
        example: 1
      app_id:
        type: "number"
        example: 1
      account_no:
        type: "string"
        example: "019324887134"
      account_name:
        type: "string"
        example: "Galih Hardiyan"
      transactions:
        type: "array"
        items:
          type: "object"
          properties:
            date:
              type: "string"
              example: "2010-05-31"
            info:
              type: "string"
              example: "TRANSFER DARI 00000000115476151"
            mutation:
              type: "string"
              example: "1000.002"
            type:
              type: "string"
              example: "C"
  errorResponse:
    type: "object"
    properties:
      success:
        type: "boolean"
        example: false
      message:
        type: "message"
        example: ""
  errorResponse400:
    type: "object"
    properties:
      success:
        type: "boolean"
        example: false
      message:
        type: "message"
        example: "Bad request"
  errorResponse403:
    type: "object"
    properties:
      success:
        type: "boolean"
        example: false
      message:
        type: "message"
        example: "Forbidden"
  errorResponse404:
    type: "object"
    properties:
      success:
        type: "boolean"
        example: false
      message:
        type: "message"
        example: "Data not found"

# external docs will show between info and Authentication
externalDocs:
  description: "Find out more about Paper id"
  url: "https://paper.id"
